#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18063
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAutoJ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DriversSN-DB")]
	public partial class DriversSN_DBClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    partial void InsertUserr(Userr instance);
    partial void UpdateUserr(Userr instance);
    partial void DeleteUserr(Userr instance);
    partial void InsertCarOwner(CarOwner instance);
    partial void UpdateCarOwner(CarOwner instance);
    partial void DeleteCarOwner(CarOwner instance);
    partial void InsertCarOwner_History(CarOwner_History instance);
    partial void UpdateCarOwner_History(CarOwner_History instance);
    partial void DeleteCarOwner_History(CarOwner_History instance);
    partial void InsertCar_History(Car_History instance);
    partial void UpdateCar_History(Car_History instance);
    partial void DeleteCar_History(Car_History instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertMessage_History(Message_History instance);
    partial void UpdateMessage_History(Message_History instance);
    partial void DeleteMessage_History(Message_History instance);
    #endregion
		
		public DriversSN_DBClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DriversSN_DBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DriversSN_DBClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DriversSN_DBClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DriversSN_DBClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DriversSN_DBClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Car> Car
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
		
		public System.Data.Linq.Table<Userr> Userr
		{
			get
			{
				return this.GetTable<Userr>();
			}
		}
		
		public System.Data.Linq.Table<CarOwner> CarOwner
		{
			get
			{
				return this.GetTable<CarOwner>();
			}
		}
		
		public System.Data.Linq.Table<CarOwner_History> CarOwner_History
		{
			get
			{
				return this.GetTable<CarOwner_History>();
			}
		}
		
		public System.Data.Linq.Table<Car_History> Car_History
		{
			get
			{
				return this.GetTable<Car_History>();
			}
		}
		
		public System.Data.Linq.Table<Message> Message
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<Message_History> Message_History
		{
			get
			{
				return this.GetTable<Message_History>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertUser")]
		public int InsertUser(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserrID", DbType="Int")] System.Nullable<int> userrID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(30)")] string name, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Login", DbType="NVarChar(30)")] string login, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(20)")] string password, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Avatar", DbType="NVarChar(100)")] string avatar, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sn_id, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FLD", DbType="DateTime")] System.Nullable<System.DateTime> fLD, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MS", DbType="NVarChar(1)")] string mS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Job", DbType="NVarChar(50)")] string job, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BD", DbType="DateTime")] System.Nullable<System.DateTime> bD, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1)")] string gender, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Hair", DbType="NVarChar(20)")] string hair, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarID", DbType="Int")] System.Nullable<int> carID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegNumber", DbType="NVarChar(10)")] string regNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Country", DbType="NVarChar(30)")] string country, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string brand, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string model, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string color)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userrID, name, login, password, avatar, email, sn_id, fLD, mS, job, bD, gender, hair, carID, regNumber, country, brand, model, color);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchMessages")]
		public ISingleResult<SearchMessagesResult> SearchMessages([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Start", DbType="DateTime")] System.Nullable<System.DateTime> start, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, start, end);
			return ((ISingleResult<SearchMessagesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Car")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarID;
		
		private string _RegNumber;
		
		private string _Country;
		
		private System.Nullable<int> _CarOwnerId;
		
		private string _Brand;
		
		private string _Model;
		
		private string _Color;
		
		private EntitySet<Car_History> _Car_History;
		
		private EntityRef<CarOwner> _CarOwner;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarIDChanging(int value);
    partial void OnCarIDChanged();
    partial void OnRegNumberChanging(string value);
    partial void OnRegNumberChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCarOwnerIdChanging(System.Nullable<int> value);
    partial void OnCarOwnerIdChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    #endregion
		
		public Car()
		{
			this._Car_History = new EntitySet<Car_History>(new Action<Car_History>(this.attach_Car_History), new Action<Car_History>(this.detach_Car_History));
			this._CarOwner = default(EntityRef<CarOwner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNumber", DbType="NVarChar(10)")]
		public string RegNumber
		{
			get
			{
				return this._RegNumber;
			}
			set
			{
				if ((this._RegNumber != value))
				{
					this.OnRegNumberChanging(value);
					this.SendPropertyChanging();
					this._RegNumber = value;
					this.SendPropertyChanged("RegNumber");
					this.OnRegNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(30)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOwnerId", DbType="Int")]
		public System.Nullable<int> CarOwnerId
		{
			get
			{
				return this._CarOwnerId;
			}
			set
			{
				if ((this._CarOwnerId != value))
				{
					if (this._CarOwner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._CarOwnerId = value;
					this.SendPropertyChanged("CarOwnerId");
					this.OnCarOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(30)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(20)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_Car_History", Storage="_Car_History", ThisKey="CarID", OtherKey="CarID")]
		public EntitySet<Car_History> Car_History
		{
			get
			{
				return this._Car_History;
			}
			set
			{
				this._Car_History.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOwner_Car", Storage="_CarOwner", ThisKey="CarOwnerId", OtherKey="CarOwnerID", IsForeignKey=true)]
		public CarOwner CarOwner
		{
			get
			{
				return this._CarOwner.Entity;
			}
			set
			{
				CarOwner previousValue = this._CarOwner.Entity;
				if (((previousValue != value) 
							|| (this._CarOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarOwner.Entity = null;
						previousValue.Car.Remove(this);
					}
					this._CarOwner.Entity = value;
					if ((value != null))
					{
						value.Car.Add(this);
						this._CarOwnerId = value.CarOwnerID;
					}
					else
					{
						this._CarOwnerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CarOwner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Car_History(Car_History entity)
		{
			this.SendPropertyChanging();
			entity.Car = this;
		}
		
		private void detach_Car_History(Car_History entity)
		{
			this.SendPropertyChanging();
			entity.Car = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Userr")]
	public partial class Userr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserrID;
		
		private string _Name;
		
		private string _Login;
		
		private string _Password;
		
		private string _Avatar;
		
		private string _Email;
		
		private System.Nullable<int> _sn_ID;
		
		private System.Nullable<System.DateTime> _RegDate;
		
		private EntityRef<CarOwner> _CarOwner;
		
		private EntitySet<Message> _Message;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserrIDChanging(int value);
    partial void OnUserrIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void Onsn_IDChanging(System.Nullable<int> value);
    partial void Onsn_IDChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    #endregion
		
		public Userr()
		{
			this._CarOwner = default(EntityRef<CarOwner>);
			this._Message = new EntitySet<Message>(new Action<Message>(this.attach_Message), new Action<Message>(this.detach_Message));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserrID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserrID
		{
			get
			{
				return this._UserrID;
			}
			set
			{
				if ((this._UserrID != value))
				{
					this.OnUserrIDChanging(value);
					this.SendPropertyChanging();
					this._UserrID = value;
					this.SendPropertyChanged("UserrID");
					this.OnUserrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(30)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(100)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sn_ID", DbType="Int")]
		public System.Nullable<int> sn_ID
		{
			get
			{
				return this._sn_ID;
			}
			set
			{
				if ((this._sn_ID != value))
				{
					this.Onsn_IDChanging(value);
					this.SendPropertyChanging();
					this._sn_ID = value;
					this.SendPropertyChanged("sn_ID");
					this.Onsn_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegDate
		{
			get
			{
				return this._RegDate;
			}
			set
			{
				if ((this._RegDate != value))
				{
					this.OnRegDateChanging(value);
					this.SendPropertyChanging();
					this._RegDate = value;
					this.SendPropertyChanged("RegDate");
					this.OnRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Userr_CarOwner", Storage="_CarOwner", ThisKey="UserrID", OtherKey="CarOwnerID", IsUnique=true, IsForeignKey=false)]
		public CarOwner CarOwner
		{
			get
			{
				return this._CarOwner.Entity;
			}
			set
			{
				CarOwner previousValue = this._CarOwner.Entity;
				if (((previousValue != value) 
							|| (this._CarOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarOwner.Entity = null;
						previousValue.Userr = null;
					}
					this._CarOwner.Entity = value;
					if ((value != null))
					{
						value.Userr = this;
					}
					this.SendPropertyChanged("CarOwner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Userr_Message", Storage="_Message", ThisKey="UserrID", OtherKey="UserrID")]
		public EntitySet<Message> Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				this._Message.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Message(Message entity)
		{
			this.SendPropertyChanging();
			entity.Userr = this;
		}
		
		private void detach_Message(Message entity)
		{
			this.SendPropertyChanging();
			entity.Userr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarOwner")]
	public partial class CarOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarOwnerID;
		
		private System.Nullable<System.DateTime> _FirstLicenseDate;
		
		private string _MaritalStatus;
		
		private string _Occupation;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Gender;
		
		private string _HairColor;
		
		private EntitySet<Car> _Car;
		
		private EntitySet<CarOwner_History> _CarOwner_History;
		
		private EntityRef<Userr> _Userr;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarOwnerIDChanging(int value);
    partial void OnCarOwnerIDChanged();
    partial void OnFirstLicenseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstLicenseDateChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnHairColorChanging(string value);
    partial void OnHairColorChanged();
    #endregion
		
		public CarOwner()
		{
			this._Car = new EntitySet<Car>(new Action<Car>(this.attach_Car), new Action<Car>(this.detach_Car));
			this._CarOwner_History = new EntitySet<CarOwner_History>(new Action<CarOwner_History>(this.attach_CarOwner_History), new Action<CarOwner_History>(this.detach_CarOwner_History));
			this._Userr = default(EntityRef<Userr>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOwnerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CarOwnerID
		{
			get
			{
				return this._CarOwnerID;
			}
			set
			{
				if ((this._CarOwnerID != value))
				{
					if (this._Userr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._CarOwnerID = value;
					this.SendPropertyChanged("CarOwnerID");
					this.OnCarOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLicenseDate", DbType="Date")]
		public System.Nullable<System.DateTime> FirstLicenseDate
		{
			get
			{
				return this._FirstLicenseDate;
			}
			set
			{
				if ((this._FirstLicenseDate != value))
				{
					this.OnFirstLicenseDateChanging(value);
					this.SendPropertyChanging();
					this._FirstLicenseDate = value;
					this.SendPropertyChanged("FirstLicenseDate");
					this.OnFirstLicenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(1)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="NVarChar(50)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(1)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HairColor", DbType="NVarChar(20)")]
		public string HairColor
		{
			get
			{
				return this._HairColor;
			}
			set
			{
				if ((this._HairColor != value))
				{
					this.OnHairColorChanging(value);
					this.SendPropertyChanging();
					this._HairColor = value;
					this.SendPropertyChanged("HairColor");
					this.OnHairColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOwner_Car", Storage="_Car", ThisKey="CarOwnerID", OtherKey="CarOwnerId")]
		public EntitySet<Car> Car
		{
			get
			{
				return this._Car;
			}
			set
			{
				this._Car.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOwner_CarOwner_History", Storage="_CarOwner_History", ThisKey="CarOwnerID", OtherKey="CarOwnerID")]
		public EntitySet<CarOwner_History> CarOwner_History
		{
			get
			{
				return this._CarOwner_History;
			}
			set
			{
				this._CarOwner_History.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Userr_CarOwner", Storage="_Userr", ThisKey="CarOwnerID", OtherKey="UserrID", IsForeignKey=true)]
		public Userr Userr
		{
			get
			{
				return this._Userr.Entity;
			}
			set
			{
				Userr previousValue = this._Userr.Entity;
				if (((previousValue != value) 
							|| (this._Userr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Userr.Entity = null;
						previousValue.CarOwner = null;
					}
					this._Userr.Entity = value;
					if ((value != null))
					{
						value.CarOwner = this;
						this._CarOwnerID = value.UserrID;
					}
					else
					{
						this._CarOwnerID = default(int);
					}
					this.SendPropertyChanged("Userr");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Car(Car entity)
		{
			this.SendPropertyChanging();
			entity.CarOwner = this;
		}
		
		private void detach_Car(Car entity)
		{
			this.SendPropertyChanging();
			entity.CarOwner = null;
		}
		
		private void attach_CarOwner_History(CarOwner_History entity)
		{
			this.SendPropertyChanging();
			entity.CarOwner = this;
		}
		
		private void detach_CarOwner_History(CarOwner_History entity)
		{
			this.SendPropertyChanging();
			entity.CarOwner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarOwner_History")]
	public partial class CarOwner_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarOwnerID;
		
		private System.Nullable<System.DateTime> _FirstLicenseDate;
		
		private string _MaritalStatus;
		
		private string _Occupation;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Gender;
		
		private string _HairColor;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<bool> _FlagEffective;
		
		private EntityRef<CarOwner> _CarOwner;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarOwnerIDChanging(int value);
    partial void OnCarOwnerIDChanged();
    partial void OnFirstLicenseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstLicenseDateChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnHairColorChanging(string value);
    partial void OnHairColorChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnFlagEffectiveChanging(System.Nullable<bool> value);
    partial void OnFlagEffectiveChanged();
    #endregion
		
		public CarOwner_History()
		{
			this._CarOwner = default(EntityRef<CarOwner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOwnerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CarOwnerID
		{
			get
			{
				return this._CarOwnerID;
			}
			set
			{
				if ((this._CarOwnerID != value))
				{
					if (this._CarOwner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._CarOwnerID = value;
					this.SendPropertyChanged("CarOwnerID");
					this.OnCarOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLicenseDate", DbType="Date")]
		public System.Nullable<System.DateTime> FirstLicenseDate
		{
			get
			{
				return this._FirstLicenseDate;
			}
			set
			{
				if ((this._FirstLicenseDate != value))
				{
					this.OnFirstLicenseDateChanging(value);
					this.SendPropertyChanging();
					this._FirstLicenseDate = value;
					this.SendPropertyChanged("FirstLicenseDate");
					this.OnFirstLicenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(1)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="NVarChar(50)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(1)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HairColor", DbType="NVarChar(20)")]
		public string HairColor
		{
			get
			{
				return this._HairColor;
			}
			set
			{
				if ((this._HairColor != value))
				{
					this.OnHairColorChanging(value);
					this.SendPropertyChanging();
					this._HairColor = value;
					this.SendPropertyChanged("HairColor");
					this.OnHairColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagEffective", DbType="Bit")]
		public System.Nullable<bool> FlagEffective
		{
			get
			{
				return this._FlagEffective;
			}
			set
			{
				if ((this._FlagEffective != value))
				{
					this.OnFlagEffectiveChanging(value);
					this.SendPropertyChanging();
					this._FlagEffective = value;
					this.SendPropertyChanged("FlagEffective");
					this.OnFlagEffectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOwner_CarOwner_History", Storage="_CarOwner", ThisKey="CarOwnerID", OtherKey="CarOwnerID", IsForeignKey=true)]
		public CarOwner CarOwner
		{
			get
			{
				return this._CarOwner.Entity;
			}
			set
			{
				CarOwner previousValue = this._CarOwner.Entity;
				if (((previousValue != value) 
							|| (this._CarOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarOwner.Entity = null;
						previousValue.CarOwner_History.Remove(this);
					}
					this._CarOwner.Entity = value;
					if ((value != null))
					{
						value.CarOwner_History.Add(this);
						this._CarOwnerID = value.CarOwnerID;
					}
					else
					{
						this._CarOwnerID = default(int);
					}
					this.SendPropertyChanged("CarOwner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Car_History")]
	public partial class Car_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarID;
		
		private string _RegNumber;
		
		private string _Country;
		
		private System.Nullable<int> _CarOwnerId;
		
		private string _Brand;
		
		private string _Model;
		
		private string _Color;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<bool> _FlagEffective;
		
		private EntityRef<Car> _Car;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarIDChanging(int value);
    partial void OnCarIDChanged();
    partial void OnRegNumberChanging(string value);
    partial void OnRegNumberChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCarOwnerIdChanging(System.Nullable<int> value);
    partial void OnCarOwnerIdChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnFlagEffectiveChanging(System.Nullable<bool> value);
    partial void OnFlagEffectiveChanged();
    #endregion
		
		public Car_History()
		{
			this._Car = default(EntityRef<Car>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					if (this._Car.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNumber", DbType="NVarChar(10)")]
		public string RegNumber
		{
			get
			{
				return this._RegNumber;
			}
			set
			{
				if ((this._RegNumber != value))
				{
					this.OnRegNumberChanging(value);
					this.SendPropertyChanging();
					this._RegNumber = value;
					this.SendPropertyChanged("RegNumber");
					this.OnRegNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(30)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOwnerId", DbType="Int")]
		public System.Nullable<int> CarOwnerId
		{
			get
			{
				return this._CarOwnerId;
			}
			set
			{
				if ((this._CarOwnerId != value))
				{
					this.OnCarOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._CarOwnerId = value;
					this.SendPropertyChanged("CarOwnerId");
					this.OnCarOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(30)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(20)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagEffective", DbType="Bit")]
		public System.Nullable<bool> FlagEffective
		{
			get
			{
				return this._FlagEffective;
			}
			set
			{
				if ((this._FlagEffective != value))
				{
					this.OnFlagEffectiveChanging(value);
					this.SendPropertyChanging();
					this._FlagEffective = value;
					this.SendPropertyChanged("FlagEffective");
					this.OnFlagEffectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_Car_History", Storage="_Car", ThisKey="CarID", OtherKey="CarID", IsForeignKey=true)]
		public Car Car
		{
			get
			{
				return this._Car.Entity;
			}
			set
			{
				Car previousValue = this._Car.Entity;
				if (((previousValue != value) 
							|| (this._Car.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car.Entity = null;
						previousValue.Car_History.Remove(this);
					}
					this._Car.Entity = value;
					if ((value != null))
					{
						value.Car_History.Add(this);
						this._CarID = value.CarID;
					}
					else
					{
						this._CarID = default(int);
					}
					this.SendPropertyChanged("Car");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private System.Nullable<int> _UserrID;
		
		private string _MessageText;
		
		private System.Data.Linq.Binary _MsgPhoto;
		
		private string _GPSCoordinates;
		
		private string _CarRegNumber;
		
		private System.Nullable<bool> _Viewed;
		
		private System.Nullable<int> _Score;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<Message_History> _Message_History;
		
		private EntityRef<Userr> _Userr;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnUserrIDChanging(System.Nullable<int> value);
    partial void OnUserrIDChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnMsgPhotoChanging(System.Data.Linq.Binary value);
    partial void OnMsgPhotoChanged();
    partial void OnGPSCoordinatesChanging(string value);
    partial void OnGPSCoordinatesChanged();
    partial void OnCarRegNumberChanging(string value);
    partial void OnCarRegNumberChanged();
    partial void OnViewedChanging(System.Nullable<bool> value);
    partial void OnViewedChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Message()
		{
			this._Message_History = default(EntityRef<Message_History>);
			this._Userr = default(EntityRef<Userr>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserrID", DbType="Int")]
		public System.Nullable<int> UserrID
		{
			get
			{
				return this._UserrID;
			}
			set
			{
				if ((this._UserrID != value))
				{
					if (this._Userr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserrIDChanging(value);
					this.SendPropertyChanging();
					this._UserrID = value;
					this.SendPropertyChanged("UserrID");
					this.OnUserrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NVarChar(50)")]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgPhoto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MsgPhoto
		{
			get
			{
				return this._MsgPhoto;
			}
			set
			{
				if ((this._MsgPhoto != value))
				{
					this.OnMsgPhotoChanging(value);
					this.SendPropertyChanging();
					this._MsgPhoto = value;
					this.SendPropertyChanged("MsgPhoto");
					this.OnMsgPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSCoordinates", DbType="NVarChar(50)")]
		public string GPSCoordinates
		{
			get
			{
				return this._GPSCoordinates;
			}
			set
			{
				if ((this._GPSCoordinates != value))
				{
					this.OnGPSCoordinatesChanging(value);
					this.SendPropertyChanging();
					this._GPSCoordinates = value;
					this.SendPropertyChanged("GPSCoordinates");
					this.OnGPSCoordinatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarRegNumber", DbType="NVarChar(10)")]
		public string CarRegNumber
		{
			get
			{
				return this._CarRegNumber;
			}
			set
			{
				if ((this._CarRegNumber != value))
				{
					this.OnCarRegNumberChanging(value);
					this.SendPropertyChanging();
					this._CarRegNumber = value;
					this.SendPropertyChanged("CarRegNumber");
					this.OnCarRegNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viewed", DbType="Bit")]
		public System.Nullable<bool> Viewed
		{
			get
			{
				return this._Viewed;
			}
			set
			{
				if ((this._Viewed != value))
				{
					this.OnViewedChanging(value);
					this.SendPropertyChanging();
					this._Viewed = value;
					this.SendPropertyChanged("Viewed");
					this.OnViewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Message_History", Storage="_Message_History", ThisKey="MessageID", OtherKey="MessageID", IsUnique=true, IsForeignKey=false)]
		public Message_History Message_History
		{
			get
			{
				return this._Message_History.Entity;
			}
			set
			{
				Message_History previousValue = this._Message_History.Entity;
				if (((previousValue != value) 
							|| (this._Message_History.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message_History.Entity = null;
						previousValue.Message = null;
					}
					this._Message_History.Entity = value;
					if ((value != null))
					{
						value.Message = this;
					}
					this.SendPropertyChanged("Message_History");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Userr_Message", Storage="_Userr", ThisKey="UserrID", OtherKey="UserrID", IsForeignKey=true)]
		public Userr Userr
		{
			get
			{
				return this._Userr.Entity;
			}
			set
			{
				Userr previousValue = this._Userr.Entity;
				if (((previousValue != value) 
							|| (this._Userr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Userr.Entity = null;
						previousValue.Message.Remove(this);
					}
					this._Userr.Entity = value;
					if ((value != null))
					{
						value.Message.Add(this);
						this._UserrID = value.UserrID;
					}
					else
					{
						this._UserrID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Userr");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message_History")]
	public partial class Message_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private System.Nullable<int> _RecieverId;
		
		private System.Nullable<System.DateTime> _DateViewed;
		
		private EntityRef<Message> _Message;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnRecieverIdChanging(System.Nullable<int> value);
    partial void OnRecieverIdChanged();
    partial void OnDateViewedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateViewedChanged();
    #endregion
		
		public Message_History()
		{
			this._Message = default(EntityRef<Message>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					if (this._Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieverId", DbType="Int")]
		public System.Nullable<int> RecieverId
		{
			get
			{
				return this._RecieverId;
			}
			set
			{
				if ((this._RecieverId != value))
				{
					this.OnRecieverIdChanging(value);
					this.SendPropertyChanging();
					this._RecieverId = value;
					this.SendPropertyChanged("RecieverId");
					this.OnRecieverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateViewed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateViewed
		{
			get
			{
				return this._DateViewed;
			}
			set
			{
				if ((this._DateViewed != value))
				{
					this.OnDateViewedChanging(value);
					this.SendPropertyChanging();
					this._DateViewed = value;
					this.SendPropertyChanged("DateViewed");
					this.OnDateViewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Message_History", Storage="_Message", ThisKey="MessageID", OtherKey="MessageID", IsForeignKey=true)]
		public Message Message
		{
			get
			{
				return this._Message.Entity;
			}
			set
			{
				Message previousValue = this._Message.Entity;
				if (((previousValue != value) 
							|| (this._Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message.Entity = null;
						previousValue.Message_History = null;
					}
					this._Message.Entity = value;
					if ((value != null))
					{
						value.Message_History = this;
						this._MessageID = value.MessageID;
					}
					else
					{
						this._MessageID = default(int);
					}
					this.SendPropertyChanged("Message");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SearchMessagesResult
	{
		
		private int _MessageID;
		
		private System.Nullable<int> _UserrID;
		
		private string _MessageText;
		
		private System.Data.Linq.Binary _MsgPhoto;
		
		private string _GPSCoordinates;
		
		private string _CarRegNumber;
		
		private System.Nullable<bool> _Viewed;
		
		private System.Nullable<int> _Score;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		public SearchMessagesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this._MessageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserrID", DbType="Int")]
		public System.Nullable<int> UserrID
		{
			get
			{
				return this._UserrID;
			}
			set
			{
				if ((this._UserrID != value))
				{
					this._UserrID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NVarChar(50)")]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this._MessageText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgPhoto", DbType="Image")]
		public System.Data.Linq.Binary MsgPhoto
		{
			get
			{
				return this._MsgPhoto;
			}
			set
			{
				if ((this._MsgPhoto != value))
				{
					this._MsgPhoto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSCoordinates", DbType="NVarChar(50)")]
		public string GPSCoordinates
		{
			get
			{
				return this._GPSCoordinates;
			}
			set
			{
				if ((this._GPSCoordinates != value))
				{
					this._GPSCoordinates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarRegNumber", DbType="NVarChar(10)")]
		public string CarRegNumber
		{
			get
			{
				return this._CarRegNumber;
			}
			set
			{
				if ((this._CarRegNumber != value))
				{
					this._CarRegNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viewed", DbType="Bit")]
		public System.Nullable<bool> Viewed
		{
			get
			{
				return this._Viewed;
			}
			set
			{
				if ((this._Viewed != value))
				{
					this._Viewed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this._Score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
